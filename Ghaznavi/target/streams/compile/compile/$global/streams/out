[0m[[0m[31merror[0m] [0m[0m/home/monis/Desktop/Ghaznavi-5-Stage/Ghaznavi/src/main/scala/datapath/Top2.scala:86:18: value id_ex is not a member of chisel3.Bundle{val rs1_in: chisel3.core.SInt; val rs2_in: chisel3.core.SInt; val func3_in: chisel3.core.UInt; val id_ex_memread: chisel3.core.UInt; val branch: chisel3.core.UInt; val output_x: chisel3.core.UInt; val branch2: chisel3.core.UInt}[0m
[0m[[0m[31merror[0m] [0m[0m		branchlogic.io.id_ex.memread:=id_ex.io.Memread_out[0m
[0m[[0m[31merror[0m] [0m[0m		               ^[0m
[0m[[0m[31merror[0m] [0m[0m/home/monis/Desktop/Ghaznavi-5-Stage/Ghaznavi/src/main/scala/datapath/Top2.scala:86:42: value Memread_out is not a member of chisel3.Bundle{val PC: chisel3.core.UInt; val PC4: chisel3.core.UInt; val Immediate: chisel3.core.SInt; val rs1_in: chisel3.core.SInt; val rs2_in: chisel3.core.SInt; val rd_sel_in: chisel3.core.UInt; val func3_in: chisel3.core.UInt; val func7_in: chisel3.core.UInt; val ctMemWr_in: chisel3.core.UInt; val ctMemRd_in: chisel3.core.UInt; val ctBranch_in: chisel3.core.UInt; val ctRegWr_in: chisel3.core.UInt; val ctMemToReg_in: chisel3.core.UInt; val ctAluOp_in: chisel3.core.UInt; val ctOpA_sel_in: chisel3.core.UInt; val ctOpB_sel_in: chisel3.core.UInt; val ctnextPc_sel_in: chisel3.core.UInt; val rs1_sel_in: chisel3.core.UInt; val rs2_sel_in: chisel3.core.UInt; val pc_out: chisel3.core.UInt; val pc4_out: chisel3.core.UInt; val rs1: chisel3.core.SInt; val rs2: chisel3.core.SInt; val Immediate_out: chisel3.core.SInt; val func3_out: chisel3.core.UInt; val func7_out: chisel3.core.UInt; val rd_sel_out: chisel3.core.UInt; val MemWrite: chisel3.core.UInt; val Branch2: chisel3.core.UInt; val MemRead: chisel3.core.UInt; val RegWrite: chisel3.core.UInt; val MemtoReg: chisel3.core.UInt; val ALUoperation: chisel3.core.UInt; val operand_A_sel: chisel3.core.UInt; val operand_B_sel: chisel3.core.UInt; val next_PC_sel: chisel3.core.UInt; val rs1_sel_out: chisel3.core.UInt; val rs2_sel_out: chisel3.core.UInt}[0m
[0m[[0m[31merror[0m] [0m[0m		branchlogic.io.id_ex.memread:=id_ex.io.Memread_out[0m
[0m[[0m[31merror[0m] [0m[0m		                                       ^[0m
[0m[[0m[31merror[0m] [0m[0mtwo errors found[0m
