;buildInfoPackage: chisel3, version: 3.1.8, scalaVersion: 2.11.12, sbtVersion: 1.1.1, builtAtString: 2019-07-08 17:44:42.884, builtAtMillis: 1562607882884
circuit control : 
  module InstructionTypeDecode : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip opcode : UInt<7>, R_Format : UInt<1>, Load : UInt<1>, Store : UInt<1>, Branch : UInt<1>, I_Type : UInt<1>, JALR : UInt<1>, JAL : UInt<1>, LUI : UInt<1>}
    
    io.R_Format <= UInt<1>("h00") @[InstructionTypeDecode.scala 16:28]
    io.Load <= UInt<1>("h00") @[InstructionTypeDecode.scala 17:24]
    io.Store <= UInt<1>("h00") @[InstructionTypeDecode.scala 18:25]
    io.Branch <= UInt<1>("h00") @[InstructionTypeDecode.scala 19:26]
    io.I_Type <= UInt<1>("h00") @[InstructionTypeDecode.scala 20:26]
    io.JALR <= UInt<1>("h00") @[InstructionTypeDecode.scala 21:24]
    io.JAL <= UInt<1>("h00") @[InstructionTypeDecode.scala 22:23]
    io.LUI <= UInt<1>("h00") @[InstructionTypeDecode.scala 23:23]
    node _T_32 = eq(io.opcode, UInt<6>("h033")) @[InstructionTypeDecode.scala 25:24]
    when _T_32 : @[InstructionTypeDecode.scala 25:41]
      io.R_Format <= UInt<1>("h01") @[InstructionTypeDecode.scala 26:28]
      skip @[InstructionTypeDecode.scala 25:41]
    else : @[InstructionTypeDecode.scala 27:48]
      node _T_35 = eq(io.opcode, UInt<2>("h03")) @[InstructionTypeDecode.scala 27:31]
      when _T_35 : @[InstructionTypeDecode.scala 27:48]
        io.Load <= UInt<1>("h01") @[InstructionTypeDecode.scala 28:24]
        skip @[InstructionTypeDecode.scala 27:48]
      else : @[InstructionTypeDecode.scala 29:48]
        node _T_38 = eq(io.opcode, UInt<6>("h023")) @[InstructionTypeDecode.scala 29:31]
        when _T_38 : @[InstructionTypeDecode.scala 29:48]
          io.Store <= UInt<1>("h01") @[InstructionTypeDecode.scala 30:25]
          skip @[InstructionTypeDecode.scala 29:48]
        else : @[InstructionTypeDecode.scala 31:48]
          node _T_41 = eq(io.opcode, UInt<7>("h063")) @[InstructionTypeDecode.scala 31:31]
          when _T_41 : @[InstructionTypeDecode.scala 31:48]
            io.Branch <= UInt<1>("h01") @[InstructionTypeDecode.scala 32:26]
            skip @[InstructionTypeDecode.scala 31:48]
          else : @[InstructionTypeDecode.scala 33:48]
            node _T_44 = eq(io.opcode, UInt<5>("h013")) @[InstructionTypeDecode.scala 33:31]
            when _T_44 : @[InstructionTypeDecode.scala 33:48]
              io.I_Type <= UInt<1>("h01") @[InstructionTypeDecode.scala 34:26]
              skip @[InstructionTypeDecode.scala 33:48]
            else : @[InstructionTypeDecode.scala 35:48]
              node _T_47 = eq(io.opcode, UInt<7>("h067")) @[InstructionTypeDecode.scala 35:31]
              when _T_47 : @[InstructionTypeDecode.scala 35:48]
                io.JALR <= UInt<1>("h01") @[InstructionTypeDecode.scala 36:24]
                skip @[InstructionTypeDecode.scala 35:48]
              else : @[InstructionTypeDecode.scala 37:48]
                node _T_50 = eq(io.opcode, UInt<7>("h06f")) @[InstructionTypeDecode.scala 37:31]
                when _T_50 : @[InstructionTypeDecode.scala 37:48]
                  io.JAL <= UInt<1>("h01") @[InstructionTypeDecode.scala 38:23]
                  skip @[InstructionTypeDecode.scala 37:48]
                else : @[InstructionTypeDecode.scala 39:48]
                  node _T_53 = eq(io.opcode, UInt<6>("h037")) @[InstructionTypeDecode.scala 39:31]
                  when _T_53 : @[InstructionTypeDecode.scala 39:48]
                    io.LUI <= UInt<1>("h01") @[InstructionTypeDecode.scala 40:23]
                    skip @[InstructionTypeDecode.scala 39:48]
    
  module control_decode : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip R_Format : UInt<1>, flip Load : UInt<1>, flip Store : UInt<1>, flip Branch : UInt<1>, flip I_Type : UInt<1>, flip JALR : UInt<1>, flip JAL : UInt<1>, flip LUI : UInt<1>, MemWrite : UInt<1>, Branch2 : UInt<1>, MemRead : UInt<1>, RegWrite : UInt<1>, MemtoReg : UInt<1>, ALUoperation : UInt<3>, operand_A_sel : UInt<2>, operand_B_sel : UInt<1>, extend_sel : UInt<2>, next_PC_sel : UInt<2>}
    
    io.MemWrite <= UInt<1>("h00") @[control_decode.scala 28:28]
    io.Branch2 <= UInt<1>("h00") @[control_decode.scala 29:27]
    io.MemRead <= UInt<1>("h00") @[control_decode.scala 30:27]
    io.RegWrite <= UInt<1>("h00") @[control_decode.scala 31:28]
    io.MemtoReg <= UInt<1>("h00") @[control_decode.scala 32:28]
    io.ALUoperation <= UInt<1>("h00") @[control_decode.scala 33:32]
    io.operand_A_sel <= UInt<1>("h00") @[control_decode.scala 34:33]
    io.operand_B_sel <= UInt<1>("h00") @[control_decode.scala 35:33]
    io.extend_sel <= UInt<1>("h00") @[control_decode.scala 36:30]
    io.next_PC_sel <= UInt<1>("h00") @[control_decode.scala 37:31]
    node _T_52 = eq(io.R_Format, UInt<1>("h01")) @[control_decode.scala 39:34]
    when _T_52 : @[control_decode.scala 39:42]
      io.RegWrite <= UInt<1>("h01") @[control_decode.scala 40:36]
      skip @[control_decode.scala 39:42]
    else : @[control_decode.scala 41:37]
      node _T_55 = eq(io.Load, UInt<1>("h01")) @[control_decode.scala 41:29]
      when _T_55 : @[control_decode.scala 41:37]
        io.MemRead <= UInt<1>("h01") @[control_decode.scala 42:27]
        io.RegWrite <= UInt<1>("h01") @[control_decode.scala 43:28]
        io.MemtoReg <= UInt<1>("h01") @[control_decode.scala 44:28]
        io.operand_B_sel <= UInt<1>("h01") @[control_decode.scala 45:33]
        io.ALUoperation <= UInt<3>("h04") @[control_decode.scala 46:32]
        skip @[control_decode.scala 41:37]
      else : @[control_decode.scala 48:37]
        node _T_62 = eq(io.Store, UInt<1>("h01")) @[control_decode.scala 48:29]
        when _T_62 : @[control_decode.scala 48:37]
          io.MemRead <= UInt<1>("h01") @[control_decode.scala 49:27]
          io.ALUoperation <= UInt<3>("h05") @[control_decode.scala 50:32]
          io.operand_B_sel <= UInt<1>("h01") @[control_decode.scala 51:33]
          io.extend_sel <= UInt<2>("h02") @[control_decode.scala 52:30]
          skip @[control_decode.scala 48:37]
        else : @[control_decode.scala 54:39]
          node _T_68 = eq(io.Branch, UInt<1>("h01")) @[control_decode.scala 54:31]
          when _T_68 : @[control_decode.scala 54:39]
            io.Branch2 <= UInt<1>("h01") @[control_decode.scala 55:27]
            io.ALUoperation <= UInt<2>("h02") @[control_decode.scala 56:32]
            io.next_PC_sel <= UInt<1>("h01") @[control_decode.scala 57:31]
            skip @[control_decode.scala 54:39]
          else : @[control_decode.scala 59:39]
            node _T_73 = eq(io.I_Type, UInt<1>("h01")) @[control_decode.scala 59:31]
            when _T_73 : @[control_decode.scala 59:39]
              io.RegWrite <= UInt<1>("h01") @[control_decode.scala 60:28]
              io.ALUoperation <= UInt<1>("h01") @[control_decode.scala 61:32]
              io.operand_B_sel <= UInt<1>("h01") @[control_decode.scala 62:33]
              skip @[control_decode.scala 59:39]
            else : @[control_decode.scala 65:37]
              node _T_78 = eq(io.JALR, UInt<1>("h01")) @[control_decode.scala 65:29]
              when _T_78 : @[control_decode.scala 65:37]
                io.RegWrite <= UInt<1>("h01") @[control_decode.scala 66:28]
                io.ALUoperation <= UInt<2>("h03") @[control_decode.scala 67:32]
                io.operand_A_sel <= UInt<2>("h02") @[control_decode.scala 68:33]
                io.next_PC_sel <= UInt<2>("h03") @[control_decode.scala 69:31]
                skip @[control_decode.scala 65:37]
              else : @[control_decode.scala 71:35]
                node _T_84 = eq(io.JAL, UInt<1>("h01")) @[control_decode.scala 71:27]
                when _T_84 : @[control_decode.scala 71:35]
                  io.RegWrite <= UInt<1>("h01") @[control_decode.scala 72:28]
                  io.ALUoperation <= UInt<2>("h03") @[control_decode.scala 73:32]
                  io.operand_A_sel <= UInt<2>("h02") @[control_decode.scala 74:33]
                  io.next_PC_sel <= UInt<2>("h02") @[control_decode.scala 75:31]
                  skip @[control_decode.scala 71:35]
                else : @[control_decode.scala 77:36]
                  node _T_90 = eq(io.LUI, UInt<1>("h01")) @[control_decode.scala 77:28]
                  when _T_90 : @[control_decode.scala 77:36]
                    io.RegWrite <= UInt<1>("h01") @[control_decode.scala 78:28]
                    io.ALUoperation <= UInt<3>("h06") @[control_decode.scala 79:32]
                    io.operand_A_sel <= UInt<2>("h03") @[control_decode.scala 80:33]
                    io.operand_B_sel <= UInt<1>("h01") @[control_decode.scala 81:33]
                    io.extend_sel <= UInt<1>("h01") @[control_decode.scala 82:30]
                    skip @[control_decode.scala 77:36]
    
  module control : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip opcode : UInt<7>, MemWrite : UInt<1>, Branch2 : UInt<1>, MemRead : UInt<1>, RegWrite : UInt<1>, MemtoReg : UInt<1>, ALUoperation : UInt<3>, operand_A_sel : UInt<2>, operand_B_sel : UInt<1>, extend_sel : UInt<2>, next_PC_sel : UInt<2>}
    
    io.MemWrite <= UInt<1>("h00") @[control.scala 21:28]
    io.Branch2 <= UInt<1>("h00") @[control.scala 22:27]
    io.MemRead <= UInt<1>("h00") @[control.scala 23:27]
    io.RegWrite <= UInt<1>("h00") @[control.scala 24:28]
    io.MemtoReg <= UInt<1>("h00") @[control.scala 25:28]
    io.ALUoperation <= UInt<1>("h00") @[control.scala 26:32]
    io.operand_A_sel <= UInt<1>("h00") @[control.scala 27:33]
    io.operand_B_sel <= UInt<1>("h00") @[control.scala 28:33]
    io.extend_sel <= UInt<1>("h00") @[control.scala 29:30]
    io.next_PC_sel <= UInt<1>("h00") @[control.scala 30:31]
    inst InstDecode of InstructionTypeDecode @[control.scala 32:40]
    InstDecode.clock <= clock
    InstDecode.reset <= reset
    inst CtrlDecode of control_decode @[control.scala 33:40]
    CtrlDecode.clock <= clock
    CtrlDecode.reset <= reset
    InstDecode.io.opcode <= io.opcode @[control.scala 34:37]
    CtrlDecode.io.R_Format <= InstDecode.io.R_Format @[control.scala 35:39]
    CtrlDecode.io.Load <= InstDecode.io.Load @[control.scala 36:35]
    CtrlDecode.io.Store <= InstDecode.io.Store @[control.scala 37:36]
    CtrlDecode.io.Branch <= InstDecode.io.Branch @[control.scala 38:37]
    CtrlDecode.io.I_Type <= InstDecode.io.I_Type @[control.scala 39:37]
    CtrlDecode.io.JALR <= InstDecode.io.JALR @[control.scala 40:35]
    CtrlDecode.io.JAL <= InstDecode.io.JAL @[control.scala 41:34]
    CtrlDecode.io.LUI <= InstDecode.io.LUI @[control.scala 42:34]
    io.MemWrite <= CtrlDecode.io.MemWrite @[control.scala 44:28]
    io.Branch2 <= CtrlDecode.io.Branch2 @[control.scala 45:27]
    io.MemRead <= CtrlDecode.io.MemRead @[control.scala 46:27]
    io.RegWrite <= CtrlDecode.io.RegWrite @[control.scala 47:28]
    io.MemtoReg <= CtrlDecode.io.MemtoReg @[control.scala 48:28]
    io.ALUoperation <= CtrlDecode.io.ALUoperation @[control.scala 49:32]
    io.operand_A_sel <= CtrlDecode.io.operand_A_sel @[control.scala 50:33]
    io.operand_B_sel <= CtrlDecode.io.operand_B_sel @[control.scala 51:33]
    io.extend_sel <= CtrlDecode.io.extend_sel @[control.scala 52:30]
    io.next_PC_sel <= CtrlDecode.io.next_PC_sel @[control.scala 53:31]
    
