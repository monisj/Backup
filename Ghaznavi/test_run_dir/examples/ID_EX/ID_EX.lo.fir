circuit ID_EX : @[:@2.0]
  module ID_EX : @[:@3.2]
    input clock : Clock @[:@4.4]
    input reset : UInt<1> @[:@5.4]
    input io_PC : UInt<32> @[:@6.4]
    input io_PC4 : UInt<32> @[:@6.4]
    input io_Immediate : SInt<32> @[:@6.4]
    input io_rs1_in : SInt<32> @[:@6.4]
    input io_rs2_in : SInt<32> @[:@6.4]
    input io_rd_sel_in : UInt<5> @[:@6.4]
    input io_func3_in : UInt<3> @[:@6.4]
    input io_func7_in : UInt<1> @[:@6.4]
    input io_ctMemWr_in : UInt<1> @[:@6.4]
    input io_ctMemRd_in : UInt<1> @[:@6.4]
    input io_ctBranch_in : UInt<1> @[:@6.4]
    input io_ctRegWr_in : UInt<1> @[:@6.4]
    input io_ctMemToReg_in : UInt<1> @[:@6.4]
    input io_ctAluOp_in : UInt<3> @[:@6.4]
    input io_ctOpA_sel_in : UInt<2> @[:@6.4]
    input io_ctOpB_sel_in : UInt<1> @[:@6.4]
    input io_ctnextPc_sel_in : UInt<2> @[:@6.4]
    input io_rs1_sel_in : UInt<5> @[:@6.4]
    input io_rs2_sel_in : UInt<5> @[:@6.4]
    output io_pc_out : UInt<32> @[:@6.4]
    output io_pc4_out : UInt<32> @[:@6.4]
    output io_rs1 : SInt<32> @[:@6.4]
    output io_rs2 : SInt<32> @[:@6.4]
    output io_Immediate_out : SInt<32> @[:@6.4]
    output io_func3_out : UInt<3> @[:@6.4]
    output io_func7_out : UInt<1> @[:@6.4]
    output io_rd_sel_out : UInt<5> @[:@6.4]
    output io_MemWrite : UInt<1> @[:@6.4]
    output io_Branch2 : UInt<1> @[:@6.4]
    output io_MemRead : UInt<1> @[:@6.4]
    output io_RegWrite : UInt<1> @[:@6.4]
    output io_MemtoReg : UInt<1> @[:@6.4]
    output io_ALUoperation : UInt<3> @[:@6.4]
    output io_operand_A_sel : UInt<2> @[:@6.4]
    output io_operand_B_sel : UInt<1> @[:@6.4]
    output io_next_PC_sel : UInt<2> @[:@6.4]
    output io_rs1_sel_out : UInt<5> @[:@6.4]
    output io_rs2_sel_out : UInt<5> @[:@6.4]
  
    reg pcr : UInt<32>, clock with :
      reset => (UInt<1>("h0"), pcr) @[ID_EX.scala 50:26:@8.4]
    reg pc4r : UInt<32>, clock with :
      reset => (UInt<1>("h0"), pc4r) @[ID_EX.scala 51:27:@9.4]
    reg rs1r : SInt<32>, clock with :
      reset => (UInt<1>("h0"), rs1r) @[ID_EX.scala 52:27:@10.4]
    reg rs2r : SInt<32>, clock with :
      reset => (UInt<1>("h0"), rs2r) @[ID_EX.scala 53:27:@11.4]
    reg immr : SInt<32>, clock with :
      reset => (UInt<1>("h0"), immr) @[ID_EX.scala 54:27:@12.4]
    reg rd_sel_r : UInt<5>, clock with :
      reset => (UInt<1>("h0"), rd_sel_r) @[ID_EX.scala 55:31:@13.4]
    reg rs1_sel_r : UInt<5>, clock with :
      reset => (UInt<1>("h0"), rs1_sel_r) @[ID_EX.scala 56:32:@14.4]
    reg rs2_sel_r : UInt<5>, clock with :
      reset => (UInt<1>("h0"), rs2_sel_r) @[ID_EX.scala 57:32:@15.4]
    reg func3_r : UInt<3>, clock with :
      reset => (UInt<1>("h0"), func3_r) @[ID_EX.scala 59:30:@16.4]
    reg func7_r : UInt<1>, clock with :
      reset => (UInt<1>("h0"), func7_r) @[ID_EX.scala 60:30:@17.4]
    reg MemWr_r : UInt<1>, clock with :
      reset => (UInt<1>("h0"), MemWr_r) @[ID_EX.scala 61:30:@18.4]
    reg MemRd_r : UInt<1>, clock with :
      reset => (UInt<1>("h0"), MemRd_r) @[ID_EX.scala 62:30:@19.4]
    reg Branch_r : UInt<1>, clock with :
      reset => (UInt<1>("h0"), Branch_r) @[ID_EX.scala 63:31:@20.4]
    reg RegWr_r : UInt<1>, clock with :
      reset => (UInt<1>("h0"), RegWr_r) @[ID_EX.scala 64:30:@21.4]
    reg MemToReg_r : UInt<1>, clock with :
      reset => (UInt<1>("h0"), MemToReg_r) @[ID_EX.scala 65:33:@22.4]
    reg AluOp_r : UInt<3>, clock with :
      reset => (UInt<1>("h0"), AluOp_r) @[ID_EX.scala 66:30:@23.4]
    reg OpA_sel_r : UInt<2>, clock with :
      reset => (UInt<1>("h0"), OpA_sel_r) @[ID_EX.scala 67:32:@24.4]
    reg OpB_sel_r : UInt<2>, clock with :
      reset => (UInt<1>("h0"), OpB_sel_r) @[ID_EX.scala 68:32:@25.4]
    reg nextPc_sel_r : UInt<1>, clock with :
      reset => (UInt<1>("h0"), nextPc_sel_r) @[ID_EX.scala 69:35:@26.4]
    io_pc_out <= pcr @[ID_EX.scala 94:15:@46.4]
    io_pc4_out <= pc4r @[ID_EX.scala 95:16:@47.4]
    io_rs1 <= rs1r @[ID_EX.scala 96:12:@48.4]
    io_rs2 <= rs2r @[ID_EX.scala 97:12:@49.4]
    io_Immediate_out <= immr @[ID_EX.scala 98:22:@50.4]
    io_func3_out <= func3_r @[ID_EX.scala 100:18:@52.4]
    io_func7_out <= func7_r @[ID_EX.scala 101:18:@53.4]
    io_rd_sel_out <= rd_sel_r @[ID_EX.scala 99:19:@51.4]
    io_MemWrite <= MemWr_r @[ID_EX.scala 105:17:@56.4]
    io_Branch2 <= Branch_r @[ID_EX.scala 107:16:@58.4]
    io_MemRead <= MemRd_r @[ID_EX.scala 106:16:@57.4]
    io_RegWrite <= RegWr_r @[ID_EX.scala 108:17:@59.4]
    io_MemtoReg <= MemToReg_r @[ID_EX.scala 109:17:@60.4]
    io_ALUoperation <= AluOp_r @[ID_EX.scala 110:21:@61.4]
    io_operand_A_sel <= OpA_sel_r @[ID_EX.scala 111:21:@62.4]
    io_operand_B_sel <= bits(OpB_sel_r, 0, 0) @[ID_EX.scala 112:22:@63.4]
    io_next_PC_sel <= nextPc_sel_r @[ID_EX.scala 113:20:@64.4]
    io_rs1_sel_out <= rs1_sel_r @[ID_EX.scala 102:20:@54.4]
    io_rs2_sel_out <= rs2_sel_r @[ID_EX.scala 103:20:@55.4]
    pcr <= mux(reset, UInt<32>("h0"), io_PC) @[ID_EX.scala 73:9:@27.4]
    pc4r <= mux(reset, UInt<32>("h0"), io_PC4) @[ID_EX.scala 74:10:@28.4]
    rs1r <= mux(reset, asSInt(UInt<32>("h0")), io_rs1_in) @[ID_EX.scala 75:10:@29.4]
    rs2r <= mux(reset, asSInt(UInt<32>("h0")), io_rs2_in) @[ID_EX.scala 76:10:@30.4]
    immr <= mux(reset, asSInt(UInt<32>("h0")), io_Immediate) @[ID_EX.scala 77:10:@31.4]
    rd_sel_r <= mux(reset, UInt<5>("h0"), io_rd_sel_in) @[ID_EX.scala 78:14:@32.4]
    rs1_sel_r <= mux(reset, UInt<5>("h0"), io_rs1_sel_in) @[ID_EX.scala 81:15:@35.4]
    rs2_sel_r <= mux(reset, UInt<5>("h0"), io_rs2_sel_in) @[ID_EX.scala 82:15:@36.4]
    func3_r <= mux(reset, UInt<3>("h0"), io_func3_in) @[ID_EX.scala 79:13:@33.4]
    func7_r <= mux(reset, UInt<1>("h0"), io_func7_in) @[ID_EX.scala 80:13:@34.4]
    MemWr_r <= mux(reset, UInt<1>("h0"), io_ctMemWr_in) @[ID_EX.scala 84:13:@37.4]
    MemRd_r <= mux(reset, UInt<1>("h0"), io_ctMemRd_in) @[ID_EX.scala 85:13:@38.4]
    Branch_r <= mux(reset, UInt<1>("h0"), io_ctBranch_in) @[ID_EX.scala 86:14:@39.4]
    RegWr_r <= mux(reset, UInt<1>("h0"), io_ctRegWr_in) @[ID_EX.scala 87:13:@40.4]
    MemToReg_r <= mux(reset, UInt<1>("h0"), io_ctMemToReg_in) @[ID_EX.scala 88:16:@41.4]
    AluOp_r <= mux(reset, UInt<3>("h0"), io_ctAluOp_in) @[ID_EX.scala 89:13:@42.4]
    OpA_sel_r <= mux(reset, UInt<2>("h0"), io_ctOpA_sel_in) @[ID_EX.scala 90:15:@43.4]
    OpB_sel_r <= mux(reset, UInt<2>("h0"), io_ctOpB_sel_in) @[ID_EX.scala 91:15:@44.4]
    nextPc_sel_r <= mux(reset, UInt<1>("h0"), bits(io_ctnextPc_sel_in, 0, 0)) @[ID_EX.scala 92:18:@45.4]
