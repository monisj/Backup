;buildInfoPackage: chisel3, version: 3.1.8, scalaVersion: 2.11.12, sbtVersion: 1.1.1, builtAtString: 2019-07-08 17:44:42.884, builtAtMillis: 1562607882884
circuit ID_EX : 
  module ID_EX : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip PC : UInt<32>, flip PC4 : UInt<32>, flip Immediate : SInt<32>, flip rs1_in : SInt<32>, flip rs2_in : SInt<32>, flip rd_sel_in : UInt<5>, flip func3_in : UInt<3>, flip func7_in : UInt<1>, flip ctMemWr_in : UInt<1>, flip ctMemRd_in : UInt<1>, flip ctBranch_in : UInt<1>, flip ctRegWr_in : UInt<1>, flip ctMemToReg_in : UInt<1>, flip ctAluOp_in : UInt<3>, flip ctOpA_sel_in : UInt<2>, flip ctOpB_sel_in : UInt<1>, flip ctnextPc_sel_in : UInt<2>, flip rs1_sel_in : UInt<5>, flip rs2_sel_in : UInt<5>, pc_out : UInt<32>, pc4_out : UInt<32>, rs1 : SInt<32>, rs2 : SInt<32>, Immediate_out : SInt<32>, func3_out : UInt<3>, func7_out : UInt<1>, rd_sel_out : UInt<5>, MemWrite : UInt<1>, Branch2 : UInt<1>, MemRead : UInt<1>, RegWrite : UInt<1>, MemtoReg : UInt<1>, ALUoperation : UInt<3>, operand_A_sel : UInt<2>, operand_B_sel : UInt<1>, next_PC_sel : UInt<2>, rs1_sel_out : UInt<5>, rs2_sel_out : UInt<5>}
    
    reg pcr : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[ID_EX.scala 50:26]
    reg pc4r : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[ID_EX.scala 51:27]
    reg rs1r : SInt<32>, clock with : (reset => (reset, asSInt(UInt<32>("h00")))) @[ID_EX.scala 52:27]
    reg rs2r : SInt<32>, clock with : (reset => (reset, asSInt(UInt<32>("h00")))) @[ID_EX.scala 53:27]
    reg immr : SInt<32>, clock with : (reset => (reset, asSInt(UInt<32>("h00")))) @[ID_EX.scala 54:27]
    reg rd_sel_r : UInt<5>, clock with : (reset => (reset, UInt<5>("h00"))) @[ID_EX.scala 55:31]
    reg rs1_sel_r : UInt<5>, clock with : (reset => (reset, UInt<5>("h00"))) @[ID_EX.scala 56:32]
    reg rs2_sel_r : UInt<5>, clock with : (reset => (reset, UInt<5>("h00"))) @[ID_EX.scala 57:32]
    reg func3_r : UInt<3>, clock with : (reset => (reset, UInt<3>("h00"))) @[ID_EX.scala 59:30]
    reg func7_r : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[ID_EX.scala 60:30]
    reg MemWr_r : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[ID_EX.scala 61:30]
    reg MemRd_r : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[ID_EX.scala 62:30]
    reg Branch_r : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[ID_EX.scala 63:31]
    reg RegWr_r : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[ID_EX.scala 64:30]
    reg MemToReg_r : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[ID_EX.scala 65:33]
    reg AluOp_r : UInt<3>, clock with : (reset => (reset, UInt<3>("h00"))) @[ID_EX.scala 66:30]
    reg OpA_sel_r : UInt<2>, clock with : (reset => (reset, UInt<2>("h00"))) @[ID_EX.scala 67:32]
    reg OpB_sel_r : UInt<2>, clock with : (reset => (reset, UInt<2>("h00"))) @[ID_EX.scala 68:32]
    reg nextPc_sel_r : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[ID_EX.scala 69:35]
    pcr <= io.PC @[ID_EX.scala 73:9]
    pc4r <= io.PC4 @[ID_EX.scala 74:10]
    rs1r <= io.rs1_in @[ID_EX.scala 75:10]
    rs2r <= io.rs2_in @[ID_EX.scala 76:10]
    immr <= io.Immediate @[ID_EX.scala 77:10]
    rd_sel_r <= io.rd_sel_in @[ID_EX.scala 78:14]
    func3_r <= io.func3_in @[ID_EX.scala 79:13]
    func7_r <= io.func7_in @[ID_EX.scala 80:13]
    rs1_sel_r <= io.rs1_sel_in @[ID_EX.scala 81:15]
    rs2_sel_r <= io.rs2_sel_in @[ID_EX.scala 82:15]
    MemWr_r <= io.ctMemWr_in @[ID_EX.scala 84:13]
    MemRd_r <= io.ctMemRd_in @[ID_EX.scala 85:13]
    Branch_r <= io.ctBranch_in @[ID_EX.scala 86:14]
    RegWr_r <= io.ctRegWr_in @[ID_EX.scala 87:13]
    MemToReg_r <= io.ctMemToReg_in @[ID_EX.scala 88:16]
    AluOp_r <= io.ctAluOp_in @[ID_EX.scala 89:13]
    OpA_sel_r <= io.ctOpA_sel_in @[ID_EX.scala 90:15]
    OpB_sel_r <= io.ctOpB_sel_in @[ID_EX.scala 91:15]
    nextPc_sel_r <= io.ctnextPc_sel_in @[ID_EX.scala 92:18]
    io.pc_out <= pcr @[ID_EX.scala 94:15]
    io.pc4_out <= pc4r @[ID_EX.scala 95:16]
    io.rs1 <= rs1r @[ID_EX.scala 96:12]
    io.rs2 <= rs2r @[ID_EX.scala 97:12]
    io.Immediate_out <= immr @[ID_EX.scala 98:22]
    io.rd_sel_out <= rd_sel_r @[ID_EX.scala 99:19]
    io.func3_out <= func3_r @[ID_EX.scala 100:18]
    io.func7_out <= func7_r @[ID_EX.scala 101:18]
    io.rs1_sel_out <= rs1_sel_r @[ID_EX.scala 102:20]
    io.rs2_sel_out <= rs2_sel_r @[ID_EX.scala 103:20]
    io.MemWrite <= MemWr_r @[ID_EX.scala 105:17]
    io.MemRead <= MemRd_r @[ID_EX.scala 106:16]
    io.Branch2 <= Branch_r @[ID_EX.scala 107:16]
    io.RegWrite <= RegWr_r @[ID_EX.scala 108:17]
    io.MemtoReg <= MemToReg_r @[ID_EX.scala 109:17]
    io.ALUoperation <= AluOp_r @[ID_EX.scala 110:21]
    io.operand_A_sel <= OpA_sel_r @[ID_EX.scala 111:21]
    io.operand_B_sel <= OpB_sel_r @[ID_EX.scala 112:22]
    io.next_PC_sel <= nextPc_sel_r @[ID_EX.scala 113:20]
    
