;buildInfoPackage: chisel3, version: 3.1.8, scalaVersion: 2.11.12, sbtVersion: 1.1.1, builtAtString: 2019-07-08 17:44:42.884, builtAtMillis: 1562607882884
circuit branchlogic : 
  module branchlogic : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip rs1_in : SInt<32>, flip rs2_in : SInt<32>, flip func3_in : UInt<3>, output_x : UInt<1>}
    
    node _T_14 = eq(io.func3_in, UInt<1>("h00")) @[branchlogic.scala 12:20]
    when _T_14 : @[branchlogic.scala 12:34]
      node _T_15 = eq(io.rs1_in, io.rs2_in) @[branchlogic.scala 14:20]
      when _T_15 : @[branchlogic.scala 14:35]
        io.output_x <= UInt<1>("h01") @[branchlogic.scala 15:19]
        skip @[branchlogic.scala 14:35]
      else : @[branchlogic.scala 16:18]
        io.output_x <= UInt<1>("h00") @[branchlogic.scala 17:19]
        skip @[branchlogic.scala 16:18]
      skip @[branchlogic.scala 12:34]
    else : @[branchlogic.scala 19:41]
      node _T_19 = eq(io.func3_in, UInt<1>("h01")) @[branchlogic.scala 19:27]
      when _T_19 : @[branchlogic.scala 19:41]
        node _T_20 = neq(io.rs1_in, io.rs2_in) @[branchlogic.scala 21:20]
        when _T_20 : @[branchlogic.scala 21:35]
          io.output_x <= UInt<1>("h01") @[branchlogic.scala 22:19]
          skip @[branchlogic.scala 21:35]
        else : @[branchlogic.scala 23:18]
          io.output_x <= UInt<1>("h00") @[branchlogic.scala 24:19]
          skip @[branchlogic.scala 23:18]
        skip @[branchlogic.scala 19:41]
      else : @[branchlogic.scala 26:41]
        node _T_24 = eq(io.func3_in, UInt<3>("h04")) @[branchlogic.scala 26:27]
        when _T_24 : @[branchlogic.scala 26:41]
          node _T_25 = lt(io.rs1_in, io.rs2_in) @[branchlogic.scala 28:20]
          when _T_25 : @[branchlogic.scala 28:33]
            io.output_x <= UInt<1>("h01") @[branchlogic.scala 29:19]
            skip @[branchlogic.scala 28:33]
          else : @[branchlogic.scala 30:18]
            io.output_x <= UInt<1>("h00") @[branchlogic.scala 31:19]
            skip @[branchlogic.scala 30:18]
          skip @[branchlogic.scala 26:41]
        else : @[branchlogic.scala 33:41]
          node _T_29 = eq(io.func3_in, UInt<3>("h05")) @[branchlogic.scala 33:27]
          when _T_29 : @[branchlogic.scala 33:41]
            node _T_30 = geq(io.rs1_in, io.rs2_in) @[branchlogic.scala 35:20]
            when _T_30 : @[branchlogic.scala 35:34]
              io.output_x <= UInt<1>("h01") @[branchlogic.scala 36:19]
              skip @[branchlogic.scala 35:34]
            else : @[branchlogic.scala 37:18]
              io.output_x <= UInt<1>("h00") @[branchlogic.scala 38:19]
              skip @[branchlogic.scala 37:18]
            skip @[branchlogic.scala 33:41]
          else : @[branchlogic.scala 40:41]
            node _T_34 = eq(io.func3_in, UInt<3>("h06")) @[branchlogic.scala 40:27]
            when _T_34 : @[branchlogic.scala 40:41]
              node _T_35 = asUInt(io.rs1_in) @[branchlogic.scala 42:20]
              node _T_36 = asUInt(io.rs2_in) @[branchlogic.scala 42:39]
              node _T_37 = lt(_T_35, _T_36) @[branchlogic.scala 42:27]
              when _T_37 : @[branchlogic.scala 42:47]
                io.output_x <= UInt<1>("h01") @[branchlogic.scala 43:19]
                skip @[branchlogic.scala 42:47]
              else : @[branchlogic.scala 44:18]
                io.output_x <= UInt<1>("h00") @[branchlogic.scala 45:19]
                skip @[branchlogic.scala 44:18]
              skip @[branchlogic.scala 40:41]
            else : @[branchlogic.scala 47:41]
              node _T_41 = eq(io.func3_in, UInt<3>("h07")) @[branchlogic.scala 47:27]
              when _T_41 : @[branchlogic.scala 47:41]
                node _T_42 = asUInt(io.rs1_in) @[branchlogic.scala 49:20]
                node _T_43 = asUInt(io.rs2_in) @[branchlogic.scala 49:40]
                node _T_44 = geq(_T_42, _T_43) @[branchlogic.scala 49:27]
                when _T_44 : @[branchlogic.scala 49:48]
                  io.output_x <= UInt<1>("h01") @[branchlogic.scala 50:19]
                  skip @[branchlogic.scala 49:48]
                else : @[branchlogic.scala 51:18]
                  io.output_x <= UInt<1>("h00") @[branchlogic.scala 52:19]
                  skip @[branchlogic.scala 51:18]
                skip @[branchlogic.scala 47:41]
              else : @[branchlogic.scala 54:16]
                io.output_x <= UInt<1>("h00") @[branchlogic.scala 55:17]
                skip @[branchlogic.scala 54:16]
    
